// <auto-generated />
using Feeder.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Feeder.Infrastructure.Migrations
{
    [DbContext(typeof(FeederDbContext))]
    partial class FeederDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Feeder.Application.Entities.Feed", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(26)")
                        .HasColumnName("id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("title");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("character varying(26)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_feeds");

                    b.ToTable("feeds", (string)null);
                });

            modelBuilder.Entity("Feeder.Application.Entities.FeedSource", b =>
                {
                    b.Property<string>("FeedId")
                        .HasColumnType("character varying(26)")
                        .HasColumnName("feed_id");

                    b.Property<string>("SourceId")
                        .HasColumnType("character varying(26)")
                        .HasColumnName("source_id");

                    b.HasKey("FeedId", "SourceId")
                        .HasName("pk_feed_sources");

                    b.ToTable("feed_sources", (string)null);
                });

            modelBuilder.Entity("Feeder.Application.Entities.UserSource", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("character varying(26)")
                        .HasColumnName("user_id");

                    b.Property<string>("SourceId")
                        .HasColumnType("character varying(26)")
                        .HasColumnName("source_id");

                    b.HasKey("UserId", "SourceId")
                        .HasName("pk_user_sources");

                    b.ToTable("user_sources", (string)null);
                });

            modelBuilder.Entity("Feeder.Application.Entities.FeedSource", b =>
                {
                    b.HasOne("Feeder.Application.Entities.Feed", null)
                        .WithMany("Sources")
                        .HasForeignKey("FeedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_feed_sources_feeds_feed_id");
                });

            modelBuilder.Entity("Feeder.Application.Entities.Feed", b =>
                {
                    b.Navigation("Sources");
                });
#pragma warning restore 612, 618
        }
    }
}
